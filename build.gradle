import work.lclpnet.build.task.GithubDeploymentTask

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'gradle-build-utils' version '1.5.3'
}

Properties props = buildUtils.loadProperties('publish.properties')

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

group = project.maven_group
version = buildUtils.gitVersion()
archivesBaseName = project.archives_base_name

repositories {
    mavenCentral()

    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'

        content {
            includeGroup 'org.bukkit'
            includeGroup 'org.spigotmc'
        }
    }

    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }

    maven {
        url "https://repo.lclpnet.work/repository/internal"
    }
}

dependencies {
    compileOnly "org.spigotmc:spigot-api:${project.spigot_version}"
    implementation 'org.slf4j:slf4j-api:2.0.6'
    implementation 'org.slf4j:slf4j-simple:2.0.7'
    implementation "work.lclpnet:lclpnetwork-api:${project.lclpnetwork_api_version}"
    implementation "work.lclpnet.mcserver-api:mcserver-api-base:${project.mcserver_api_base_version}"
    implementation "work.lclpnet:lclpstorage:${project.lclpstorage_version}"
    implementation "work.lclpnet:translations4j:${project.translations4j_version}"

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
}

test {
    useJUnitPlatform()
}

java {
    withJavadocJar()
    withSourcesJar()
}

processResources {
    inputs.property "version", project.version

    filesMatching("plugin.yml") {
        expand "version": project.version
    }
}

[jar, sourcesJar, javadocJar, shadowJar].each {
    it.from(rootProject.file('LICENSE')) {
        rename { "${it}_${project.archives_base_name}"}
    }
}

shadowJar {
    dependencies {
        include(dependency('work.lclpnet:lclpnetwork-api'))
        include(dependency('work.lclpnet.mcserver-api:mcserver-api-base'))
        include(dependency('work.lclpnet:lclpstorage'))
        include(dependency('work.lclpnet:translations4j'))
        include(dependency('org.slf4j:slf4j-api'))
        include(dependency('org.slf4j:slf4j-simple'))
    }

    // Relocate to prevent conflicts with other mods that include it
    relocate 'work.lclpnet.lclpnetwork', 'mcsapi.work.lclpnet.lclpnetwork'
    relocate 'work.lclpnet.serverapi', 'mcsapi.work.lclpnet.serverapi'
    relocate 'work.lclpnet.storage', 'mcsapi.work.lclpnet.storage'
    relocate 'work.lclpnet.translations', 'mcsapi.work.lclpnet.translations'
    relocate 'org.slf4j', 'mcsapi.org.slf4j'

    mergeServiceFiles()

    archiveClassifier.set('')  // Replace the default JAR
}

tasks.build.dependsOn('shadowJar')

def env = System.getenv()

tasks.register("github", GithubDeploymentTask) {
    dependsOn tasks.shadowJar

    config {
        token = env.get("GITHUB_TOKEN")
        repository = env.get("GITHUB_REPOSITORY")
    }

    release {
        title = "[$project.minecraft_version] $project.name $project.version"
        tag = buildUtils.latestTag()
    }

    assets.add(tasks.shadowJar.archiveFile.get())
}

publishing {
    buildUtils.setupPublishRepository(repositories, props)

    publications {
        mavenJava(MavenPublication) {
            artifactId = project.archives_base_name

            artifact jar
            artifact sourcesJar
            artifact javadocJar

            pom {
                name = 'MCServer Bukkit Implementation'
                description = 'A Java library to manage Minecraft server backend interaction with LCLPNetwork. For Bukkit.'
            }
        }
    }
}